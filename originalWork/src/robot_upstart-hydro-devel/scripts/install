#!/bin/bash
#
# Author: Mike Purvis <mpurvis@clearpathrobotics.com>
#         Copyright (c) 2013, Clearpath Robotics, Inc.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#    * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#    * Neither the name of Clearpath Robotics, Inc. nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL CLEARPATH ROBOTICS, INC. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# Please send comments, questions, or patches to code@clearpathrobotics.com 

usage=$(cat <<"EOF"
USAGES: rosrun robot_upstart install mypkg/path [opts]
        rosrun robot_upstart install mypkg/path/to/file.launch [opts]

Required:
  pkg          ROS package name
  path         Path within ROS package which contains launchfiles.
  file.launch  Specific launchfile within ROS package.

Optional:
  --job NAME   Name to use for job. Defaults to first word of pkg, as separated
               by an underscore; eg myrobot_bringup -> myrobot.
  --interface IFACE
               Network interface to use as upstart trigger, where to get ROS_IP.
               Defaults to eth0.
  --user USER  Unprivileged user to roslaunch as. Defaults to current user.
  --setup /path/to/setup.bash
               Absolute path of setup.bash to use as ROS environment. Defaults 
               to inheriting the one from the current workspace.
  --rosdistro DISTRO
               ROS distro this is for. Defaults to $ROS_DISTRO.
  --master URI
               Master to launch the job against, especially important for upstart
               jobs on secondary machines. Defaults to http://$ROS_IP:11311
  --augment    Skip creating a job-- just copy the indicated launchfiles. Useful
               adding more launchers to a single job, in the case of multiple
               potential configurations.
  --help       Show this help screen.

Most invocations should be from a wrapper script or catkin target. For details
on using this package, please see README.md.
EOF
)
if [[ "$@" =~ "--help" || "$#" == "0" ]]; then echo "$usage"; exit 0; fi

tmpl_arg_names=(job interface user setup rosdistro master)

##############################################################################
# Reinvocation as root
##############################################################################

if [ "$(id -u)" != "0" ]; then
  # Gather up information about the current environment before we reinvoke as root.
  rospack=`which rospack`
  rosdistro=$ROS_DISTRO
  source `$rospack find rosbash`/rosbash
  roscd
  setup=`pwd`/setup.bash

  # Only tell the user if they'll actually be prompted.
  sudo -n true
  if [ "$?" != "0" ]; then
    echo "Re-invoking installation script as root."
  fi

  # Pass user-supplied parameters at the end, so that they override the environment-
  # derived ones in case of a conflict.
  sudo $0 --user $USER --rosdistro $rosdistro --setup $setup "$@"
  exit $!
fi

##############################################################################
# Parse args
##############################################################################

# This parsing scheme is totally insecure; brevity is preferred in a
# trusted scenario such as this one.
positionals=()
while (( "$#" )) ; do
  arg_name=`echo "$1" | grep -o ^--[a-zA-Z0-9_]*$ | cut -d- -f3`
  if [ "$arg_name" != "" ] ; then 
    arg_val=`echo "$2" | grep -o ^[a-zA-Z0-9_-/.:]*$`
    #echo "Parsed $arg_name $arg_val"
    if [[ "$arg_val" == --* ]] || [[ "$arg_val" == "" ]]; then
      eval "$arg_name=\"true\""
      shift 1
    else
      eval "$arg_name=\"$arg_val\""
      shift 2
    fi
  else
    positionals+="$1"
    shift 1
  fi
done

if [[ "${#positionals[@]}" != "1" ]] ; then
  echo "Wrong number of positional arguments. Invoke with --help for usage."
  exit 1
fi

pkg=`echo ${positionals[0]} | cut -d/ -f1`
pkgpath=`echo ${positionals[0]} | cut -d/ -f2-`

##############################################################################
# Parameter defaults
##############################################################################

job=${job-`echo "$pkg" | cut -d_ -f1`}
interface=${interface-"eth0"}
master=${master-"http://\$ROS_IP:11311"}

##############################################################################
# Installation details
##############################################################################

source $setup
launch_path=/etc/ros/$rosdistro/$job.d

if [ "$augment" != "true" ]; then
  echo "Installing $job job using network interface $interface."

  # Assemble an argument string to pass to the templates. Can't just pass
  # through the user's original string, since we've injected defaults and
  # derived values.
  args=()
  for arg_name in "${tmpl_arg_names[@]}"; do
    args+=("--${arg_name} ${!arg_name}")
  done

  # Upstart job and scripts written out to system locations.
  # These *_gen files are executable templates created by mktmpl as part of 
  # package build. Please see CMakeLists for the logic which does this.
  rosrun robot_upstart start_gen /usr/sbin/$job-start ${args[@]}
  rosrun robot_upstart stop_gen /usr/sbin/$job-stop ${args[@]}
  rosrun robot_upstart job_conf_gen /etc/init/$job.conf ${args[@]}

  # Creating launch path if not already present.
  mkdir -p $launch_path 
fi

# Copy launch file or files into launch path.
rospd $pkg > /dev/null
if [[ -f $pkgpath ]] ; then
  echo "Adding file to $job job: $pkg/$pkgpath"
  cp $pkgpath $launch_path
else
  echo "Adding files to $job job: $pkg/$pkgpath/*"
  pushd $pkgpath > /dev/null
  cp * $launch_path
  popd > /dev/null
fi
popd > /dev/null
