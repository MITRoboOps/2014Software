#!/usr/bin/env python
#
# Author: Mike Purvis <mpurvis@clearpathrobotics.com>
#         Copyright (c) 2013, Clearpath Robotics, Inc.
#
# mktmpl is a lightweight template compiler, intended to simplify the generation
# of customized shell scripts and system config files. It wraps python's builtin
# format() function with some argparse goodness. As part of the package
# build/install, the files in /tmpl get compiled into executables in the
# package's binary# directory (see CMakeLists.txt). The install script
# executes these to install the stop/stop/job.conf files.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#    * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#    * Neither the name of Clearpath Robotics, Inc. nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL CLEARPATH ROBOTICS, INC. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Please send comments, questions, or patches to code@clearpathrobotics.com 

import argparse, sys, string, os, stat

parser = argparse.ArgumentParser(description="Create executable template from input template file.")
parser.add_argument('infile', nargs='?', type=argparse.FileType('r'), 
                    default=sys.stdin)
parser.add_argument('outfile', nargs='?', type=argparse.FileType('w'),
                    default=sys.stdout)
args = parser.parse_args()

template_text = args.infile.read()
subs = set()
for txt, sub, _, _ in string.Formatter().parse(template_text):
  if sub: subs.add(sub)

out = """#!/usr/bin/env python
import argparse, sys, string, os, stat
p = argparse.ArgumentParser(description="Executable template generated from %s." % {infile})
p.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout)
for sub in {subs}:
  p.add_argument('--%s' % sub, type=str, required=True)
args, _ = p.parse_known_args()
t = {template_text}
args.outfile.write(t.format(**vars(args)))
if t.startswith("#!/") and not args.outfile.isatty():
  os.chmod(args.outfile.name, stat.S_IRWXU | stat.S_IRWXG | stat.S_IRWXO)
"""

args.outfile.write(out.format(
    infile=repr(args.infile.name),
    template_text=repr(template_text),
    subs=repr(subs)))

# Make the template executable
if not args.outfile.isatty():
  os.chmod(args.outfile.name, stat.S_IRWXU | stat.S_IRWXG | stat.S_IRWXO)
