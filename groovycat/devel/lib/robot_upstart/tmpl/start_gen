#!/usr/bin/env python
import argparse, sys, string, os, stat
p = argparse.ArgumentParser(description="Executable template generated from %s." % '/home/roboops/groovycat/src/robot_upstart-hydro-devel/tmpl/start')
p.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout)
for sub in set(['setup', 'interface', 'job', 'master', 'user', 'rosdistro']):
  p.add_argument('--%s' % sub, type=str, required=True)
args, _ = p.parse_known_args()
t = '#!/bin/bash\n#\n# Author: Mike Purvis <mpurvis@clearpathrobotics.com>\n#         Copyright (c) 2013, Clearpath Robotics, Inc.\n# \n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#       notice, this list of conditions and the following disclaimer.\n#    * Redistributions in binary form must reproduce the above copyright\n#       notice, this list of conditions and the following disclaimer in the\n#       documentation and/or other materials provided with the distribution.\n#    * Neither the name of Clearpath Robotics, Inc. nor the\n#       names of its contributors may be used to endorse or promote products\n#       derived from this software without specific prior written permission.\n# \n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL CLEARPATH ROBOTICS, INC. BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n# \n# Please send comments, questions, or patches to code@clearpathrobotics.com \n\nfunction log() {{\n  logger -s -p user.$1 ${{@:2}}\n}}\n\nlog info "{job}: Using workspace setup file {setup}"\nsource {setup}\nJOB_FOLDER=/etc/ros/{rosdistro}/{job}.d \n\nexport ROS_IP=`rosrun robot_upstart getifip {interface}`\nexport ROS_MASTER_URI={master}\nif [ "$ROS_IP" = "" ]; then\n  log err "{job}: No IP address on {interface}, cannot roslaunch."\n  exit 1\nfi\nlog info "{job}: Launching on interface {interface}, ROS_IP=$ROS_IP, ROS_MASTER_URI=$ROS_MASTER_URI"\n\n# If xacro files are present in job folder, generate and expand an amalgamated urdf.\nXACRO_FILENAME=/tmp/{job}.xacro\nXACRO_ROBOT_NAME=$(echo "{job}" | cut -d- -f1)\nrosrun robot_upstart mkxacro $JOB_FOLDER $XACRO_ROBOT_NAME > $XACRO_FILENAME\nif [[ "$?" == "0" ]]; then\n  URDF_FILENAME=/tmp/{job}.urdf\n  rosrun xacro xacro $XACRO_FILENAME -o $URDF_FILENAME\n  if [[ "$?" == "0" ]]; then\n    log info "{job}: Generated URDF: $URDF_FILENAME"\n  else\n    log warn "{job}: URDF macro expansion failure. Robot description will not function."\n  fi\n  export ROBOT_URDF_FILENAME=$URDF_FILENAME\nfi\n\n# Assemble amalgamated launchfile.\nLAUNCH_FILENAME=/tmp/{job}.launch\nrosrun robot_upstart mklaunch $JOB_FOLDER > $LAUNCH_FILENAME\nif [[ "$?" != "0" ]]; then\n  log err "{job}: Unable to generate amalgamated launchfile."\n  exit 1\nfi\nlog info "{job}: Generated launchfile: $LAUNCH_FILENAME"\n\n# Warn and exit if setuidgid is missing from the system.\nwhich setuidgid > /dev/null\nif [ "$?" != "0" ]; then\n  log err "{job}: Can\'t launch as unprivileged user without setuidgid. Please install daemontools package."\n  exit 1\nfi\n\n# Punch it.\nexport ROS_HOME=$(echo ~{user})/.ros\nexport ROS_LOG_DIR=/tmp\nsetuidgid {user} roslaunch $LAUNCH_FILENAME &\nPID=$!\n\nlog info "{job}: Started roslaunch as background process, PID $PID"\necho "$PID" > /tmp/{job}.pid\n\nwait "$PID"\n'
args.outfile.write(t.format(**vars(args)))
if t.startswith("#!/") and not args.outfile.isatty():
  os.chmod(args.outfile.name, stat.S_IRWXU | stat.S_IRWXG | stat.S_IRWXO)
